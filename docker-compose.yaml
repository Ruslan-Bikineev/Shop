services:
  shop-db:
    image: postgres:16.1-alpine
    container_name: shop-postgres-db
    restart: always
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - shop-postgres-db-data:/var/lib/postgresql/data
  shop-backend-1:
    build: ./
    container_name: shop-backend-1
    hostname: shop-1
    restart: on-failure
    env_file:
      - .env
    environment:
      DB_HOST: shop-db
      SERVER_PORT: 8080
      SQL_INIT_MODE: always
      CATEGORIES_SCHEDULER_CRON: 0 */10 * * * *
    depends_on:
      shop-db:
        condition: service_healthy
  shop-backend-2:
    build: ./
    container_name: shop-backend-2
    hostname: shop-2
    restart: on-failure
    env_file:
      - .env
    environment:
      DB_HOST: shop-db
      SERVER_PORT: 8081
    depends_on:
      shop-db:
        condition: service_healthy
  shop-backend-3:
    build: ./
    container_name: shop-backend-3
    hostname: shop-3
    restart: on-failure
    env_file:
      - .env
    environment:
      DB_HOST: shop-db
      SERVER_PORT: 8082
    depends_on:
      shop-db:
        condition: service_healthy
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - .env
    depends_on:
      shop-db:
        condition: service_healthy
    volumes:
      - ./pgadmin/pgadmin_setup.json:/pgadmin4/servers.json:ro
  nginx-gateway:
    image: nginx
    container_name: nginx-gateway
    restart: always
    ports:
      - "443:443"
    depends_on:
      pgadmin:
        condition: service_started
      shop-backend-1:
        condition: service_started
      shop-backend-2:
        condition: service_started
      shop-backend-3:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/static:/data/www/static:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
volumes:
  shop-postgres-db-data:
